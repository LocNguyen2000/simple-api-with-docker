run-name: Deployment Steps

on:
  push:
    branches:
      - "main"
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - run: echo "Start runnning unit test on Github Actions"
      - uses: actions/checkout@v3
      
      - name: Setup on Node.JS ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with: 
          node-version: ${{matrix.node-version}}

      - name: Installation
        run: npm ci
        
      - name: Testing
        run: npm test
  push-dockerhub:
    name: Pushing to Dockerhub
    needs: test
    runs-on: ubuntu-latest
    steps:
      - run: echo "Pushing to Dockerhub"
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USER}}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{secrets.DOCKERHUB_USER}}/${{vars.DOCKERHUB_REPO}}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  push-ec2:
    name: Deploy to EC2
    needs: test
    runs-on: ubuntu-latest
    steps:
        - name: Checkout the files
          uses: actions/checkout@v3
        - name: Deploy to AWS Server
          uses: easingthemes/ssh-deploy@main
          env:
            SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
            REMOTE_HOST: ${{ secrets.EC2_HOST_DNS }}
            REMOTE_USER: ${{ vars.EC2_USERNAME }}
            TARGET: ${{ vars.EC2_TARGET_DIR }}
        - name: Executing remote ssh commands using ssh key
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.EC2_HOST_DNS }}
            username: ${{ vars.EC2_USERNAME }}
            key: ${{ secrets.EC2_SSH_KEY }}
            script: |
              cd ./${{vars.EC2_TARGET_DIR}}
              echo '${{vars.APP_ENV}}' > .env
              sh startup.sh
              