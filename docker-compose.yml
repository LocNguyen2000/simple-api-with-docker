version: "3.9"
networks:  
  my_network_2:    
    driver: bridge
volumes:
  mysql-data:
services:  
    mysql0:    
      image: mysql:8.0    
      container_name: root_sql_db
      env_file: ./.env
      environment:      
        MYSQL_ROOT_PASSWORD: ${SQL_PASSWORD}      
        MYSQL_DATABASE: ${SQL_DB_NAME}      
        MYSQL_ALLOW_EMPTY_PASSWORD: "true"    
      healthcheck:      
        test: [ "CMD-SHELL", 'mysqladmin ping' ]      
        interval: 3s
        timeout: 20s
        retries: 5      
        start_period: 10s
      ports:      
        - ${SQL_PORT}:3306
      networks:      
        - my_network_2
      volumes:
        - mysql-data:/usr/var/db/mysql
    mongo0:    
      image: mongo:5.0
      container_name: loggerdb
      healthcheck:      
        test: echo 'db.stats().ok'      
        interval: 2s
        timeout: 20s
        retries: 5      
        start_period: 10s
      ports:      
        - ${MONGO_PORT}:27017
      networks:      
        - my_network_2
    nginx0:
      image: nginx:alpine
      container_name: nginx0
      volumes:
      - ./templates:/etc/nginx/templates
      ports:
      - "80:80"
      networks:      
        - my_network_2
      environment:
      - NGINX_HOST=0.0.0.0
      - NGINX_PORT=80
    web:
      depends_on:      
        mysql0:        
          condition: service_healthy
        mongo0:        
          condition: service_healthy
      build: .    
      scale: 3
      env_file: ./.env
      environment:
        - NODE_ENV=docker
      ports:      
        - "${PORT}-${PORT_RANGE}:${PORT}"    
      networks:      
        - my_network_2